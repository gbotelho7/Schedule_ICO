"use strict";
/*
 * @license
 * Copyright (c) 2021 Cristo Navarro.
 * Copyright (c) 2020 Francisco Cruz.
 * Copyright (c) 2019 Cristian Abrante.
 * All rights reserved.
 * Licensed under the MIT License. See LICENSE in the project root for license information.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isEqual = void 0;
/**
 * Compares to items and return true if they are equal, and false if not. If
 * both items are objects, then it makes a deep comparison, cheking the
 * values of each property.
 * @param firstItem First item to compare
 * @param secondItem Second item to compare
 * @return True if they are equal. False if not.
 */
function isEqual(firstItem, secondItem) {
    if (firstItem === secondItem) {
        return true;
    }
    if (typeof firstItem === 'object' && typeof secondItem === 'object') {
        for (const property in firstItem) {
            if (firstItem[property] === secondItem[property]) {
                continue;
            }
            if (firstItem.hasOwnProperty(property) && secondItem.hasOwnProperty(property)) {
                if (!isEqual(firstItem[property], secondItem[property])) {
                    return false;
                }
            }
        }
        return true;
    }
    return false;
}
exports.isEqual = isEqual;
//# sourceMappingURL=isEqual.js.map