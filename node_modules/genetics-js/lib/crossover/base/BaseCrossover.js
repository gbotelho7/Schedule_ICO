"use strict";
/*
 * @license
 * Copyright (c) 2019 Cristian Abrante. All rights reserved.
 * Licensed under the MIT License. See LICENSE in the project root for license information.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseCrossover = void 0;
class BaseCrossover {
    crossWith(firstParent, secondParent, params) {
        this.checkParents(firstParent, secondParent);
        const parentsLength = firstParent.length();
        const genotypes = [[], []];
        for (let i = 0; i < parentsLength; i++) {
            const result = this.getGenotypeValues(firstParent, secondParent, params, i);
            genotypes[0].push(result.first);
            genotypes[1].push(result.second);
        }
        // @ts-ignore
        // prettier-ignore
        return [new params.individualConstructor(genotypes[0], firstParent.range), new params.individualConstructor(genotypes[1], secondParent.range)];
    }
    parentsAreValid(firstParent, secondParent) {
        return firstParent.length() === secondParent.length() && firstParent.length() > 1;
    }
    checkParents(firstParent, secondParent) {
        if (!this.parentsAreValid(firstParent, secondParent)) {
            throw new Error('NPointsCrossover: both parents must have the same length.');
        }
    }
}
exports.BaseCrossover = BaseCrossover;
//# sourceMappingURL=BaseCrossover.js.map