"use strict";
/*
 * @license
 * Copyright (c) 2019 Cristian Abrante. All rights reserved.
 * Licensed under the MIT License. See LICENSE in the project root for license information.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UniformMutation = void 0;
const utils_1 = require("../../generator/utils");
const MutationBase_1 = require("./MutationBase");
class UniformMutation extends MutationBase_1.MutationBase {
    static checkMutationRate(mutationRate) {
        if (!utils_1.Generator.probabilityIsValid(mutationRate)) {
            throw new Error(`Error: Mutation rate ${mutationRate} is not in range [0.0 - 1.0]`);
        }
    }
    mutate(individual, mutationRate = 0.5, engine = utils_1.Generator.DEFAULT_ENGINE) {
        this.mutateWith(individual, { mutationRate, engine });
    }
    mutateWith(individual, params) {
        UniformMutation.checkMutationRate(params.mutationRate);
        super.mutateWith(individual, params);
    }
    mutateGene(individual, index, params) {
        const threshold = utils_1.Generator.generateProbability(params.engine);
        if (threshold <= params.mutationRate) {
            this.mutateGeneUniformly(individual, index, params);
        }
    }
}
exports.UniformMutation = UniformMutation;
//# sourceMappingURL=UniformMutation.js.map