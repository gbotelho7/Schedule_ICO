import { MutableIndividual } from '../../individual/base';
import { MutationParams } from './Mutation';
import { MutationBase } from './MutationBase';
export interface UniformMutationParams extends MutationParams {
    mutationRate: number;
}
export declare abstract class UniformMutation<I extends MutableIndividual<T>, T> extends MutationBase<I, T, UniformMutationParams> {
    private static checkMutationRate;
    mutate(individual: I, mutationRate?: number, engine?: import("random-js").Engine): void;
    mutateWith(individual: I, params: UniformMutationParams): void;
    protected mutateGene(individual: I, index: number, params: UniformMutationParams): void;
    protected abstract mutateGeneUniformly(individual: I, index: number, params: UniformMutationParams): void;
}
