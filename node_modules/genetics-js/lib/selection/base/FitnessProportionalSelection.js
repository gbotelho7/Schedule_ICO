"use strict";
/*
 * @license
 * Copyright (c) 2019 Cristian Abrante. All rights reserved.
 * Licensed under the MIT License. See LICENSE in the project root for license information.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FitnessProportionalSelection = void 0;
const BaseSelection_1 = require("./BaseSelection");
class FitnessProportionalSelection extends BaseSelection_1.BaseSelection {
    constructor() {
        super(...arguments);
        this.cumulativeProbability = [];
        this.getCumulativeProbability = (item, index) => {
            return this.cumulativeProbability[index];
        };
    }
    selectWith(population, params) {
        this.checkParams(population, params);
        this.cumulativeProbability = [];
        for (let i = 0; i < population.getPopulationSize(); i++) {
            const { fitness } = population.getPopulationItem(i);
            const normalizedFitness = fitness / population.populationStatistics.fitnessSum;
            const cumulativeProb = i === 0 ? normalizedFitness : this.cumulativeProbability[i - 1] + normalizedFitness;
            this.cumulativeProbability.push(cumulativeProb);
        }
        return params.subSelection.select(population, { engine: params.engine, selectionCount: params.selectionCount }, this.getCumulativeProbability);
    }
}
exports.FitnessProportionalSelection = FitnessProportionalSelection;
//# sourceMappingURL=FitnessProportionalSelection.js.map