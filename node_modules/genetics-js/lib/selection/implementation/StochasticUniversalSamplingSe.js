"use strict";
/*
 * @license
 * Copyright (c) 2019 Cristian Abrante. All rights reserved.
 * Licensed under the MIT License. See LICENSE in the project root for license information.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StochasticUniversalSamplingSe = void 0;
const utils_1 = require("../../generator/utils");
const base_1 = require("../../individual/numeric/base");
class StochasticUniversalSamplingSe {
    select(population, params, cumulativeProbabilityCallback) {
        const mattingPool = [];
        const amount = 1.0 / params.selectionCount;
        let prob = utils_1.Generator.generateFloating(new base_1.NumericRange(0.0, amount));
        let index = 0;
        while (mattingPool.length !== params.selectionCount) {
            const individual = population.getPopulationItem(index).individual;
            const cumulativeProbability = cumulativeProbabilityCallback(population.getPopulationItem(index), index);
            while (prob <= cumulativeProbability) {
                mattingPool.push(individual);
                prob += amount;
            }
            index += 1;
        }
        return mattingPool;
    }
}
exports.StochasticUniversalSamplingSe = StochasticUniversalSamplingSe;
//# sourceMappingURL=StochasticUniversalSamplingSe.js.map