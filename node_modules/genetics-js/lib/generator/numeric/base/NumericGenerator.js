"use strict";
/*
 * @license
 * Copyright (c) 2019 Cristian Abrante. All rights reserved.
 * Licensed under the MIT License. See LICENSE in the project root for license information.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NumericGenerator = void 0;
const base_1 = require("../../../individual/numeric/base");
const utils_1 = require("../../utils");
const base_2 = require("./../../base/");
/**
 * ## NumericGenerator
 * Generator of [[NumericIndividuals]]
 */
class NumericGenerator extends base_2.BaseGenerator {
    /**
     * Generates a [[NumericIndividual]]
     * with the specified params.
     * @param length of the individual that is going to be generated.
     * @param range of the individual that is going to be generated.
     * @param engine (of `random-js`) that is going to be used.
     * @return [[NumericIndividual]] with the generated genotype.
     * @throws RangeError if `length` is not greater than `0`.
     * @throws Error if `range` is not valid.
     */
    generate(length, range = base_1.NumericRange.DEFAULT, engine = utils_1.Generator.DEFAULT_ENGINE) {
        const params = { length, range, engine };
        return this.generateWith(params);
    }
    /**
     * Generates a [[NumericIndividual]] with
     * the specified params.
     * @param params of the generator.
     * @return [[NumericIndividual]] with the generated genotype.
     * @throws RangeError if `length` is not greater than `0`.
     * @throws Error if `range` is not valid.
     */
    generateWith(params) {
        return super.generateWith(params);
    }
}
exports.NumericGenerator = NumericGenerator;
//# sourceMappingURL=NumericGenerator.js.map